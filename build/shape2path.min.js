// https://github.com/HarryStevens/shape2path#readme Version 1.0.2. Copyright 2017 Harry Stevens.
!function(o,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t(o.shape2path={})}(this,function(o){"use strict";function t(o){if(!o)throw Error("You must pass options to shape2path.circle()");if(o){if(void 0==o.cx)throw Error("You must pass cx as an option to shape2path.circle()");if(void 0==o.cy)throw Error("You must pass cy as an option to shape2path.circle()");if(void 0==o.r)throw Error("You must pass r as an option to shape2path.circle()")}var t=o.cx,r=o.cy,s=o.r;return"M"+t+","+r+" m"+-s+",0 a"+s+","+s+" 0 1,0 "+2*s+",0 a"+s+","+s+" 0 1,0 "+2*-s+",0"}function r(o){if(!o)throw Error("You must pass options to shape2path.ellipse()");if(o){if(void 0==o.cx)throw Error("You must pass cx as an option to shape2path.ellipse()");if(void 0==o.cy)throw Error("You must pass cy as an option to shape2path.ellipse()");if(void 0==o.rx)throw Error("You must pass rx as an option to shape2path.ellipse()");if(void 0==o.ry)throw Error("You must pass ry as an option to shape2path.ellipse()")}var t=o.cx,r=o.cy,s=o.rx,i=o.ry;return"M"+(t-s)+","+r+" a"+s+","+i+" 0 1,0 "+2*s+",0 a"+s+","+i+" 0 1,0 -"+2*s+",0"}function s(o){if(!o)throw Error("You must pass options to shape2path.line()");if(o){if(void 0==o.x1)throw Error("You must pass x1 as an option to shape2path.line()");if(void 0==o.x2)throw Error("You must pass x2 as an option to shape2path.line()");if(void 0==o.y1)throw Error("You must pass y1 as an option to shape2path.line()");if(void 0==o.y2)throw Error("You must pass y2 as an option to shape2path.line()")}var t=o.x1,r=o.x2;return"M"+t+","+o.y1+" L"+r+","+o.y2}function i(o){if(!o)throw Error("You must pass options to shape2path.circle()");if(o&&void 0==o.points)throw Error("You must pass points as an option to shape2path.polygon()");return o.points.split(" ").map(function(o,t){return 0==t?"M"+o:"L"+o}).join(" ")+" Z"}function p(o){if(!o)throw Error("You must pass options to shape2path.polyline()");if(o&&void 0==o.points)throw Error("You must pass points as an option to shape2path.polyline()");return o.points.split(" ").map(function(o,t){return 0==t?"M"+o:"L"+o}).join(" ")}function a(o){if(!o)throw Error("You must pass options to shape2path.rect()");if(o){if(void 0==o.x)throw Error("You must pass x as an option to shape2path.rect()");if(void 0==o.y)throw Error("You must pass y as an option to shape2path.rect()");if(void 0==o.width)throw Error("You must pass width as an option to shape2path.rect()");if(void 0==o.height)throw Error("You must pass height as an option to shape2path.rect()")}var t=o.x,r=o.y,s=o.width+t,i=o.height+r;if(o.rx||o.ry){var p=o.rx?o.rx:o.ry,a=o.ry?o.ry:o.rx;return"M"+(t+p)+","+r+" H"+(s-p)+" C"+(s-p)+","+r+" "+s+","+r+" "+s+","+(r+a)+" V"+(i-a)+" C"+s+","+(i-a)+" "+s+","+i+" "+(s-p)+","+i+" H"+(t+p)+" C"+(t+p)+","+i+" "+t+","+i+" "+t+","+(i-a)+" V"+(r+a)+" C"+t+","+(r+a)+" "+t+","+r+" "+(t+p)+","+r}return"M"+t+","+r+" H"+s+" V"+i+" H"+t+" Z"}o.circle=t,o.ellipse=r,o.line=s,o.polygon=i,o.polyline=p,o.rect=a,Object.defineProperty(o,"__esModule",{value:!0})});